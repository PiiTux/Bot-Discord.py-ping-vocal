# Importation des modules n√©cessaires
from os import getenv
from dotenv import load_dotenv
from discord import AllowedMentions, Client, Intents

# ID du r√¥le √† pinger
ROLE = 0000000000000000000
# ID du salon o√π le bot doit envoyer le message
CHANNEL = 0000000000000000000
# Liste des ID des salons vocaux √† ignorer par le bot
IGNORED_CHANNELS = (0000000000000000000, 0000000000000000000)

# Chargement des variables d'environnement √† partir du fichier .env
load_dotenv()

# R√©cup√©ration du jeton d'acc√®s Discord √† partir des variables d'environnement
TOKEN = getenv("DISCORD_TOKEN")

# Cr√©ation des intents pour le client Discord
intents = Intents.default()
intents.voice_states = True
intents.members = True

# Cr√©ation du client Discord
client = Client(intents=intents)


# √âv√©nement d√©clench√© lorsque le bot est pr√™t
@client.event
async def on_ready():
    print(f"Pr√™t ! Connect√© en tant que {client.user}")


# √âv√©nement d√©clench√© lorsqu'un membre change d'√©tat vocal (rejoindre, quitter, etc.)
@client.event
async def on_voice_state_update(member, before, after):
    # V√©rifie si le membre a rejoint ou chang√© de salon vocal
    if (after.channel is not None and before.channel != after.channel and not member.bot and after.channel.id not in IGNORED_CHANNELS):
        # Filtrer les membres pr√©sents pour exclure les bots
        members = [m for m in after.channel.members if not m.bot]

        # V√©rifie si le salon contient uniquement le membre qui vient de rejoindre
        if len(members) == 1:
            # R√©cup√©ration du salon depuis son ID
            channel = after.channel.guild.get_channel(CHANNEL)
            # R√©cup√©ration du r√¥le depuis son ID
            role = after.channel.guild.get_role(ROLE)

            # V√©rifie que le r√¥le existe
            if role:
                mention = f"<@&{ROLE}>"
            else:
                mention = "@here"

            # V√©rifie que le salon existe
            if channel:
                # Envoyer un message dans le salon
                await channel.send(f"üéôÔ∏è <@{member.id}> s'est connect√© dans le salon <#{after.channel.id}>.|| *Ping {mention}*||", allowed_mentions=AllowedMentions(users=False))


# D√©marrage du client Discord avec le jeton d'acc√®s
client.run(TOKEN)
